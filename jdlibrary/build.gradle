apply plugin: 'com.android.library'
apply plugin: 'maven'

static def isWindows() {
    return System.properties['os.name'].toString().toLowerCase().contains('windows')
}

android {

    compileSdkVersion 28

    defaultConfig {
        minSdkVersion 14
        targetSdkVersion 28
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"

        gradle.projectsEvaluated {
            tasks.withType(JavaCompile) {
                println System.properties['os.name']
                if (isWindows()) {
                    println "-- current system is windows"
                    options.compilerArgs.add('-Xbootclasspath/p:jdlibrary\\compilelib\\framework.jar')
                } else {
                    println "-- current system is linux or mac"
                    options.compilerArgs.add('-Xbootclasspath/p:jdlibrary/compilelib/framework.jar')
                }
            }
        }
        ndk {
            moduleName "ApkPatchLibrary"
            abiFilters "armeabi-v7a", "x86"
        }
    }

    uploadArchives {
        repositories {
            mavenDeployer {
                repository(url: 'http://192.168.2.199:8081/artifactory/gradle-release') {
                    authentication(userName: 'tsontang', password: 'mmm123')
                }

                pom.project {
                    groupId 'com.jidouauto.market'
                    artifactId 'lib'
                    version '1.0.10'
                    packaging 'aar'
                }
            }
        }
    }

    sourceSets {
        main {
            jni.srcDirs = ['src/main/jni', 'src/main/jni/']
        }
    }

    buildTypes {
        release {
            debuggable true
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
        debug {

        }
    }

}

//uploadArchives {
//
//    repositories.mavenDeployer {
//        repository(url: 'file:///Users/tangxin/work/maven')
//        pom.groupId = 'com.jidouauto.market'
//        pom.artifactId = 'lib'
//        pom.version = '1.0.3'
//    }
//
//}

dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    compileOnly files('compilelib/framework.jar')
    implementation 'com.android.support:appcompat-v7:28.0.0'
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'com.android.support.test:runner:1.0.2'
    androidTestImplementation 'com.android.support.test.espresso:espresso-core:3.0.2'
    // RxJava
    api 'io.reactivex:rxjava:1.2.3'
    api 'io.reactivex.rxjava2:rxjava:2.2.0'
    api 'io.reactivex.rxjava2:rxandroid:2.0.2'
    // Retrofit
    api 'com.squareup.retrofit2:retrofit:2.4.0'
    api 'com.squareup.retrofit2:converter-gson:2.4.0'
    api 'com.squareup.retrofit2:adapter-rxjava2:2.3.0'
    api 'com.squareup.okhttp3:logging-interceptor:3.10.0'
    api 'com.squareup.okhttp3:okhttp:3.10.0'
    //json解析
    api 'com.alibaba:fastjson:1.2.23'
    //apache http包
    api 'org.apache.httpcomponents:httpcore:4.4.5'
    //glide
    api 'com.github.bumptech.glide:glide:4.8.0'
    annotationProcessor 'com.github.bumptech.glide:compiler:4.8.0'
    api 'jp.wasabeef:glide-transformations:2.0.1'
    //二维码相关
    api 'com.google.zxing:core:3.3.0'
    //downloadManager
    api 'zlc.season:rxdownload3:1.2.7'
}
